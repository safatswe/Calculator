package MyProject;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.awt.Color;
import java.awt.Container;
public class Calculator implements ActionListener{
    JFrame frame;
    JTextField tf,tf1;
    JButton[] nmbr=new JButton[10];
    JButton[] oprt=new JButton[10];
    JButton add,sub,div,mul,deci,equ,delt,clr,sqr,mod;
    JPanel panel;
    Font f=new Font("arial",Font.ITALIC+Font.BOLD,30);
    Font f1=new Font("arial",Font.ITALIC+Font.BOLD,35);
    double num1=0,num2=0,ans=0;

    char operator;
    private Cursor cursor;
    JLabel displayfield;

    private Container c;

    Calculator()
    {  frame=new JFrame();
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setBounds(100,100,420,530);
        frame.setLayout(null);
        frame.setTitle("My Calculator");
        c=this.frame.getContentPane();
        c.setBackground(Color.black);




        tf=new JTextField();
        tf.setBounds(50,25,300,50);
        tf.setFont(f);
        tf.setForeground(Color.black);
        tf.setBackground(Color.lightGray);
        tf.setEditable(false);
        tf1= new JTextField();
        tf1.setBounds(0,0,1,1);
        tf1.setEditable(false);

        cursor =new Cursor(Cursor.HAND_CURSOR);


        add=new JButton("+");
        sub=new JButton("-");
        div=new JButton("/");
        mul=new JButton("x");
        deci=new JButton(".");
        equ=new JButton("=");
        clr=new JButton("C");
        delt=new JButton("D");
        mod=new JButton("%");
        mod.setFont(f1);
        sqr=new JButton("x\u00B2");
        sqr.setFont(f1);


        oprt[0]=add;
        oprt[1]=sub;
        oprt[2]=div;
        oprt[3]=mul;
        oprt[4]=delt;
        oprt[5]=clr;
        oprt[6]=deci;
        oprt[7]=equ;
        oprt[8]=mod;
        oprt[9]=sqr;

        for(int i=0;i<10;i++)
        { oprt[i].addActionListener(this);
            oprt[i].setFont(f);
            oprt[i].setFocusable(false);
            oprt[i].setCursor(cursor);

        }

        for(int i=0;i<10;i++)
        { nmbr[i]=new JButton(String.valueOf(i));
            nmbr[i].addActionListener(this);
            nmbr[i].setFont(f);
            nmbr[i].setCursor(cursor);
            nmbr[i].setFocusable(false);
          nmbr[i].setBackground(Color.WHITE);

        }


        panel=new JPanel();
        panel.setBounds(50,100,300,350);
        panel.setLayout(new GridLayout(5,5,2,2));
        panel.setBackground(Color.cyan);

        panel.add(nmbr[7]);
        panel.add(nmbr[8]);
        panel.add(nmbr[9]);
        panel.add(add);
        panel.add(nmbr[4]);
        panel.add(nmbr[5]);
        panel.add(nmbr[6]);
        panel.add(sub);
        panel.add(nmbr[1]);
        panel.add(nmbr[2]);
        panel.add(nmbr[3]);
        panel.add(mul);
        panel.add(deci);
        panel.add(nmbr[0]);
        panel.add(equ);
        panel.add(div);
        panel.add(clr);
        panel.add(delt);
        panel.add(mod);
        panel.add(sqr);


        frame.add(panel);
        frame.add(tf);
        frame.add(tf1);
        frame.setVisible(true);

    }


    public static void main(String[] args) {
        Calculator cal=new Calculator();



    }

    @Override
    public void actionPerformed(ActionEvent e) {
        for (int i = 0; i < 10; i++) {
            if (e.getSource() == nmbr[i]) {
                tf.setText(tf.getText().concat(String.valueOf(i)));
                tf1.setText(tf1.getText().concat(String.valueOf(i)));

            }
        }
        if (e.getSource() == deci) {
            tf.setText(tf.getText().concat("."));
            tf1.setText(tf1.getText().concat("."));
        }
        if (e.getSource() == add) {
            num1 = Double.parseDouble(tf1.getText());
            operator = '+';
            tf1.setText("");
           tf.setText(tf.getText().concat("+"));
        }
        if (e.getSource() == sub) {

            num1=Double.parseDouble(tf1.getText());

            operator = '-';
            tf1.setText("");
            tf.setText(tf.getText().concat("-"));
        }
        if (e.getSource() == mul) {
            num1 = Double.parseDouble(tf1.getText());
            operator = '*';
            tf1.setText("");
            tf.setText(tf.getText().concat("x"));
        }
        if (e.getSource() == div) {
            num1 = Double.parseDouble(tf1.getText());
            operator = '/';
            tf1.setText("");
            tf.setText(tf.getText().concat("/"));
        }
        if(e.getSource()==mod)
        {  num1 = Double.parseDouble(tf1.getText());
            operator='%';
            tf1.setText("");
            tf.setText(tf.getText().concat("%"));

        }
        if(e.getSource()==sqr)
        {
            num1 = Double.parseDouble(tf1.getText());
            operator='^';
            tf1.setText("");
            tf.setText(tf.getText().concat("^"));
        }
        if (e.getSource() == equ) {
            if(operator!='^')
            num2 = Double.parseDouble(tf1.getText());
            tf1.setText("");

            switch (operator) {
                case '+':
                    ans =num1+num2;
                    break;
                case '-':
                    ans = num1-num2;
                    break;
                case '*':
                    ans = num1*num2;
                    break;
                case '/':
                    ans = num1/num2;
                    break;
                case '%':
                    ans=num1%num2;
                    break;
                case '^'://if(num2==2)
                    ans=num1*num1;
                    break;

            }
            tf.setText("");
            tf1.setText("");
            tf.setText(String.valueOf(ans));
            tf1.setText(String.valueOf(ans));

            ans=0;

        }



        if (e.getSource() == clr) {
            tf.setText("");
            tf1.setText("");
            num1=0;
            ans=0;
        }
        if (e.getSource() == delt) {
            String string = tf.getText();
            tf.setText("");
            tf1.setText("");
            for (int i = 0; i < string.length() - 1; i++) {
                tf.setText(tf.getText() + string.charAt(i));
            }

        }

    }
}
